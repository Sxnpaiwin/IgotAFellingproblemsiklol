name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Run every 5 hours
jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.FINE_GRAINED_PAT }}  # Use fine-grained PAT for checkout
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '22'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug - List directory contents
        run: ls -la
      - name: Install and Run PufferPanel
        if: "!contains(github.event.head_commit.message, 'Auto commit every 30 seconds')"
        env:
          FINE_GRAINED_PAT: ${{ secrets.FINE_GRAINED_PAT }}
          REPO: ${{ github.repository }}
          PLAYIT_SECRET: ${{ secrets.PLAYIT_SECRET }}
        run: |
          # Install PufferPanel
          sudo apt update
          sudo apt install -y git curl
          curl -sS https://get.pufferpanel.com | sh
          sudo systemctl start pufferpanel
          sudo systemctl enable pufferpanel

          # Configure PufferPanel to run on port 38160
          echo "Changing PufferPanel port to 38160"
          sudo sed -i 's/"port": 5657/"port": 38160/g' /etc/pufferpanel/config.json
          sudo systemctl restart pufferpanel

          # Start PlayIt
          cd $GITHUB_WORKSPACE
          chmod +x playit-linux-amd64
          echo "$PLAYIT_SECRET" > playit.toml
          ./playit-linux-amd64 2>&1 | sed '/login:/s/.*/<REDACTED>/' &
          PLAYIT_PID=$!

          # Function to commit and push changes
          commit_and_push() {
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add -A  # Stage all changes
            git reset -- playit.toml  # Unstage playit.toml
            git reset -- playit.log
            git reset -- tunnel-config.yml
            git reset -- credentials.json
            git reset -- logs/
            
            if ! git commit -m "Auto commit every 30 seconds [no ci]"; then
                echo "No changes to commit or commit failed"
                return 1
            fi
            
            for i in {1..3}; do
                if git push https://x-access-token:${FINE_GRAINED_PAT}@github.com/${GITHUB_REPOSITORY}.git HEAD:playit-only --force; then
                    echo "Push successful on attempt $i"
                    return 0
                else
                    echo "Push failed on attempt $i, retrying..."
                    git pull --rebase
                fi
            done
            
            echo "Failed to push after 3 attempts"
            return 1
          }

          delete_auto_commit_workflows() {
            workflow_ids=$(curl -s -H "Authorization: token $FINE_GRAINED_PAT" \
              "https://api.github.com/repos/${REPO}/actions/runs" | \
              jq '.workflow_runs[] | select(.head_commit.message | contains("Auto commit every 30 seconds [no ci]")) | .id')
            for id in $workflow_ids; do
              echo "Deleting workflow run $id"
              curl -s -X DELETE -H "Authorization: token $FINE_GRAINED_PAT" \
                "https://api.github.com/repos/${REPO}/actions/runs/$id"
            done
          }

          create_new_workflow_run() {
            curl -X POST -H "Authorization: token $FINE_GRAINED_PAT" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${REPO}/actions/workflows/blank.yml/dispatches" \
              -d '{"ref":"playit-only"}'
            echo "New workflow run created"
          } 

          cancel_old_workflow_runs() {
            current_run_id=$GITHUB_RUN_ID
            workflow_runs=$(curl -s -H "Authorization: token $FINE_GRAINED_PAT" \
              "https://api.github.com/repos/${REPO}/actions/runs?branch=playit-only&status=in_progress")
            
            echo "$workflow_runs" | jq -r ".workflow_runs[] | select(.id != $current_run_id) | .id" | while read -r run_id; do
              echo "Cancelling workflow run $run_id"
              curl -s -X POST -H "Authorization: token $FINE_GRAINED_PAT" \
                "https://api.github.com/repos/${REPO}/actions/runs/$run_id/cancel"
            done
          }

          START_TIME=$(date +%s)
          
          # Schedule the cancellation of old workflow runs after 30 seconds
          (sleep 30 && cancel_old_workflow_runs) &
          (sleep 20 && rm credentials.json) &

          while true; do
            if ! commit_and_push; then
                echo "Commit and push failed, continuing without stopping the workflow"
            fi
            
            CURRENT_TIME=$(date +%s)
            ELAPSED_TIME=$((CURRENT_TIME - START_TIME))
            
            if ! kill -0 $PLAYIT_PID 2>/dev/null || [ $ELAPSED_TIME -ge 18000 ]; then
              if ! kill -0 $PLAYIT_PID 2>/dev/null; then
                echo "PlayIt Tunnel process has stopped."
              else
                echo "Workflow has been running for 5 hours."
              fi
              echo "Creating new workflow run and exiting current one."
              create_new_workflow_run
              exit 0
            fi
            
            sleep 30
          done

      - name: Rerun workflow if previous step failed
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.FINE_GRAINED_PAT }}
        run: |
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/blank.yml/dispatches" \
            -d '{"ref":"playit-only"}'
          echo "Workflow rerun triggered due to previous step failure"
